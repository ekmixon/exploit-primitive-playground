.SUFFIXES:

LFLAGS = $(BITNESS) -Wl,--no-as-needed -Wl,-z,relro -Wl,-z,now -Wl,-z,noexecstack -fPIE -pie -ldl -lpthread
CFLAGS = $(BITNESS) -fPIC -fPIE -ffunction-sections -fdata-sections -fstack-protector-all $(INCLUDES)

OBJDIR := $(realpath .)/build/_X86_64

PAYLOAD ?= ./examples/trap_payload

VENV=./.venv
IN_VENV=. $(VENV)/bin/activate;

SRCS ?= src/main.c src/application.c src/gadgets.S
OBJS := $(addprefix $(OBJDIR)/, $(addsuffix .o,$(basename $(SRCS))))
OBJS := $(subst src/,,$(OBJS))
BINS := epp

$(OBJDIR):
	mkdir -p $(OBJDIR)

epp: $(OBJS)
	$(CC) $(LFLAGS) $(OBJS) -o $(OBJDIR)/$@
	strip -s $(OBJDIR)/$@

$(OBJDIR)/%.o: src/%.S
	$(CC) $(CFLAGS) -c $< -o $@

$(OBJDIR)/%.o: src/%.c
	$(CC) $(CFLAGS) -c $< -o $@

all: $(OBJDIR) $(BINS)
	@:

clean:
	rm -rvf build/*

realclean: clean
	-rm -rf $(VENV)

test_epp: all 
	build/_X86_64/epp 127.0.0.1 8080

test_remote_code_execution: all $(VENV)/bin/activate
	$(IN_VENV) examples/remote_code_execution.py 127.0.0.1 8080 "$(PAYLOAD)"

test_remote_command_execution: all $(VENV)/bin/activate
	$(IN_VENV) examples/remote_command_execution.py 127.0.0.1 8080 "$(PAYLOAD)"

$(VENV)/bin/activate: requirements.txt
	test -d $(VENV) || python3 -m venv --prompt attack $(VENV)
	( \
		$(IN_VENV) \
		pip install --upgrade pip; \
		pip install -Ur requirements.txt; \
	)
	touch $@

.DEFAULT_GOAL := all
.PHONY: all clean realclean test_remote_command_execution test_remote_code_execution test_epp epp
